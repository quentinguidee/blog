{"version":3,"sources":["components/articles/Author.js","components/articles/Footer.js","components/articles/Header.js","components/articles/Article.js","components/articles/Background.js","components/articles/Definition.js","components/articles/Image.js","components/articles/Subtitle.js","components/articles/Text.js","components/articles/Title.js","images/drawing.png","pages/Episode1.js","pages/Error404.js","components/home/Card.js","pages/Home.js","components/articles/Code.js","images/arduino-uno.png","images/arduino-mega.png","images/arduino-cover.png","images/arduino-ide.png","images/vscode.png","pages/Episode2.js","App.js","reportWebVitals.js","index.js"],"names":["Author","className","href","this","props","link","author","date","Component","Footer","Header","to","children","Article","Background","credits","noCredits","from","style","color","fromURL","target","rel","Fragment","backgroundImage","image","Definition","Image","maxHeight","height","alt","src","Subtitle","text","toUpperCase","Text","Title","title","subtitle","Episode1","DrawingImage","Error404","Cards","Card","Home","Code","code","language","showLineNumbers","theme","dracula","wrapLines","Episode2","ArduinoCover","ArduinoUno","ArduinoMega","ArduinoIDE","VSCode","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5672b7b5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./sass/Author.sass\";\n\nexport default class Author extends Component {\n    render() {\n        return (\n            <div className=\"author\">\n                Ecrit par{\" \"}\n                <a className=\"author__link\" href={this.props.link}>\n                    {this.props.author}\n                </a>\n                , le {this.props.date}.\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Footer.sass\";\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <div className=\"footer__copyright\">\n                    ©2021{\" \"}\n                    <a className=\"footer__link\" href={this.props.link}>\n                        {this.props.author}\n                    </a>\n                    . All rights reserved.\n                </div>\n            </footer>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./sass/Header.sass\";\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <header className=\"header\">\n                <Link to=\"/\" className=\"header__logo\">\n                    Quentin Guidée\n                </Link>\n                {this.props.children}\n            </header>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Author from \"./Author\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nimport \"./sass/Article.sass\";\n\nexport default class Article extends Component {\n    render() {\n        return (\n            <div className=\"article\">\n                <Header>Création d'un quadcopter</Header>\n                {this.props.children}\n                <Author\n                    author={this.props.author}\n                    link=\"https://github.com/quentinguidee\"\n                    date={this.props.date}\n                />\n                <Footer\n                    author={this.props.author}\n                    link=\"https://github.com/quentinguidee\"\n                />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Background.sass\";\n\nexport default class Background extends Component {\n    render() {\n        var credits;\n        if (!this.props.noCredits) {\n            credits = (\n                <div className=\"background__credits\">\n                    Image by {this.props.from} from{\" \"}\n                    <a\n                        style={{ color: \"inherit\" }}\n                        href={this.props.fromURL}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        Unsplash\n                    </a>\n                    .\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <div\n                    className=\"background\"\n                    style={{ backgroundImage: `url(${this.props.image})` }}\n                ></div>\n                {credits}\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Definition.sass\";\n\nexport default class Definition extends Component {\n    render() {\n        return <span className=\"definition\">{this.props.children}</span>;\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Image.sass\";\n\nexport default class Image extends Component {\n    render() {\n        return (\n            <div className=\"image-container\">\n                <img\n                    className=\"image\"\n                    style={{\n                        maxHeight: this.props.height\n                            ? this.props.height + \"px\"\n                            : \"inherit\",\n                    }}\n                    alt={this.props.alt}\n                    src={this.props.src}\n                />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Subtitle.sass\";\n\nexport default class Subtitle extends Component {\n    render() {\n        return <h3 className=\"subtitle\">{this.props.text.toUpperCase()}</h3>;\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Text.sass\";\n\nexport default class Text extends Component {\n    render() {\n        return <div className=\"text\">{this.props.children}</div>;\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./sass/Title.sass\";\n\nexport default class Title extends Component {\n    render() {\n        return (\n            <div>\n                <h1 className=\"title\">{this.props.title.toUpperCase()}</h1>\n                <h2 className=\"title2\">{this.props.subtitle.toUpperCase()}</h2>\n            </div>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/drawing.1a71073a.png\";","import React, { Component } from \"react\";\nimport Article from \"../components/articles/Article\";\nimport Background from \"../components/articles/Background\";\nimport Definition from \"../components/articles/Definition\";\nimport Image from \"../components/articles/Image\";\nimport Subtitle from \"../components/articles/Subtitle\";\nimport Text from \"../components/articles/Text\";\nimport Title from \"../components/articles/Title\";\n\nimport DrawingImage from \"../images/drawing.png\";\n\nexport default class Episode1 extends Component {\n    render() {\n        return (\n            <Article author=\"Quentin Guidée\" date=\"03/01/2021\">\n                <Title title=\"épisode 1\" subtitle=\"Conception\" />\n                <Background\n                    image=\"https://unsplash.com/photos/4UGmm3WRUoQ/download?force=true\"\n                    from=\"sigmund\"\n                    fromURL=\"https://unsplash.com/@sigmund\"\n                />\n                <Subtitle text=\"L'idée\" />\n                <Text>\n                    Je passe mes journées à développer des trucs, mais jusqu'ici\n                    je ne m’étais jamais intéressé au{\" \"}\n                    <Definition>hardware</Definition>. C’est le moment de se\n                    lancer ! Souci : aucune idée de projet, comme d’hab… Allumer\n                    une LED ? Ouais on va pas faire avancer le monde avec une\n                    LED…\n                </Text>\n                <Text>\n                    Puis là, lumière ! Go faire un drone. C’est trop compliqué ?\n                    Peut être pas tant que ça…\n                </Text>\n                <Text>\n                    C’est suite à cette réflexion lumineuse que je me suis lancé\n                    dans la création d’un drone.\n                </Text>\n                <Subtitle text=\"Le drone : objectif\" />\n                <Text>\n                    Le drone que l'on va construire se démarquera de la\n                    concurrence <Definition>open source</Definition> avec ceci :\n                </Text>\n                <Text>\n                    <ul>\n                        <li>Il sera extrêmement stable, même face au vent ;</li>\n                        <li>\n                            Il sera doté d'une série d'actions très pratiques\n                            (aterrissage et décollage 100% automatique,\n                            atterrissage sécurisé en cas de déconnexion de\n                            l'émetteur…) ;\n                        </li>\n                        <li>Il aura une structure \"fait maison\".</li>\n                    </ul>\n                </Text>\n                <Subtitle text=\"A quoi ressemblera-t-il ?\" />\n                <Text>\n                    Nous allons construire un{\" \"}\n                    <Definition>Quadcopter</Definition>. Le premier prototype\n                    visera quelque chose de ce genre :\n                </Text>\n                <Image height=\"320\" alt=\"Image du drone\" src={DrawingImage} />\n                <Text>\n                    On a, entre autre, une batterie amovible au dessus, une\n                    caméra à l'avant (qui sera réalisée très tard dans le\n                    projet), une LED de statut au dessus avec un bouton on/off,\n                    des LEDs sous les moteurs…\n                </Text>\n                <Text>\n                    Bien sûr, ce croquis subira de très nombreuses modifications\n                    au cours du projet. Son but est vraiment d'avoir une\n                    première idée pour ne pas trop se lancer à l'aveugle.\n                </Text>\n                <Subtitle text=\"Comment va-t-on s'y prendre ?\" />\n                <Text>\n                    Pour ce projet, il faudra s'y prendre comme il faut. En\n                    effet, tout semble très complexe à priori. Mais en\n                    décomposant le drone composant par composant, tout sera\n                    beaucoup plus simple.\n                </Text>\n                <Text>\n                    Le drone sera d'abord construit sur une structure\n                    extrêmement simplifiée destinée à un premier prototypage. Le\n                    projet se déroulera comme suit :\n                </Text>\n                <Text>\n                    <ul>\n                        <li>\n                            D'abord, on s'occupera de tous les éléments les plus\n                            simples, comme les LEDs. Commencer par ça permet de\n                            déjà poser la structure du code et d'avoir une\n                            approche simplifiée de l'électronique.\n                        </li>\n                        <li>\n                            Ensuite, on s'occupera de toute la partie en vol.\n                        </li>\n                        <li>\n                            Une fois ceci fait, le prototype est donc terminé.\n                            On s'occupera alors de créer le produit fini, c'est\n                            à dire la structure extérieure, simplifier certaines\n                            choses, améliorer des parties un peu brouillon…\n                        </li>\n                        <li>\n                            Pour finir, on sera enfin apte à y ajouter tout ce\n                            qu'on souhaite ! Des pieds ? Aller chercher de la\n                            nourriture à la cuisine ? Ou même faire le café !\n                        </li>\n                    </ul>\n                </Text>\n                <Subtitle text=\"Episode suivant…\" />\n                <Text>Dans l'épisode 2, on parlera un peu du hardware ^^</Text>\n            </Article>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Error404 extends Component {\n    render() {\n        return (\n            <div className=\"error404\">\n                404\n                <Link className=\"error404__link\" to=\"/\">\n                    Go home\n                </Link>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./sass/Card.sass\";\n\nexport class Cards extends Component {\n    render() {\n        return <div className=\"cards\">{this.props.children}</div>;\n    }\n}\n\nexport default class Card extends Component {\n    render() {\n        return (\n            <Link className=\"card\" to={this.props.to}>\n                <span className=\"card__title\">\n                    {this.props.title.toUpperCase()}\n                </span>\n                <span className=\"card__subtitle\">\n                    {this.props.subtitle.toUpperCase()}\n                </span>\n                <span className=\"card__date\">{this.props.date}</span>\n            </Link>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../components/articles/Header\";\nimport Title from \"../components/articles/Title\";\nimport Card, { Cards } from \"../components/home/Card\";\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div className=\"home\">\n                <Header />\n                <Title title=\"Articles\" subtitle=\"Création d'un quadcopter\" />\n                <Cards>\n                    <Card\n                        to=\"/articles/create-drone-1\"\n                        title=\"Episode 1\"\n                        subtitle=\"Conception\"\n                        date=\"03/01/2021\"\n                    />\n                    <Card\n                        to=\"/articles/create-drone-2\"\n                        title=\"Episode 2\"\n                        subtitle=\"L'Arduino\"\n                        date=\"13/01/2021\"\n                    />\n                </Cards>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { atomOneDark, CopyBlock, dracula } from \"react-code-blocks\";\n\nimport \"./sass/Code.sass\";\n\nexport default class Code extends Component {\n    render() {\n        return (\n            <div className=\"code\">\n                <CopyBlock\n                    text={this.props.code}\n                    language={this.props.language}\n                    showLineNumbers={false}\n                    theme={dracula}\n                    wrapLines\n                />\n            </div>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/arduino-uno.1bfb4ceb.png\";","export default __webpack_public_path__ + \"static/media/arduino-mega.130c9c7e.png\";","export default __webpack_public_path__ + \"static/media/arduino-cover.b41420c8.png\";","export default __webpack_public_path__ + \"static/media/arduino-ide.1421a8a2.png\";","export default __webpack_public_path__ + \"static/media/vscode.ae0b1494.png\";","import React, { Component } from \"react\";\n\nimport Article from \"../components/articles/Article\";\nimport Background from \"../components/articles/Background\";\nimport Definition from \"../components/articles/Definition\";\nimport Image from \"../components/articles/Image\";\nimport Subtitle from \"../components/articles/Subtitle\";\nimport Text from \"../components/articles/Text\";\nimport Title from \"../components/articles/Title\";\nimport Code from \"../components/articles/Code\";\n\nimport ArduinoUno from \"../images/arduino-uno.png\";\nimport ArduinoMega from \"../images/arduino-mega.png\";\nimport ArduinoCover from \"../images/arduino-cover.png\";\nimport ArduinoIDE from \"../images/arduino-ide.png\";\nimport VSCode from \"../images/vscode.png\";\nimport { atomOneDark, CopyBlock } from \"react-code-blocks\";\n\nlet templateCode = `void setup() {\n    // Code lancé une fois au démarrage de l'Arduino\n}\n\nvoid loop() {\n  // Code exécuté en boucle\n}`;\n\nlet makefileCode = `BOARD=arduino:avr:mega:cpu=atmega2560\nARDUINO_CLI=arduino-cli\nPORT=/dev/ttyACM0\n\nall:\n  \\${ARDUINO_CLI} -b \\${BOARD} compile\n\nupload:\n  \\${ARDUINO_CLI} -b \\${BOARD} -p \\${PORT} upload`;\n\nexport default class Episode2 extends Component {\n    render() {\n        return (\n            <Article author=\"Quentin Guidée\" date=\"13/01/2021\">\n                <Title title=\"épisode 2\" subtitle=\"L'arduino\" />\n                <Background image={ArduinoCover} noCredits />\n                <Subtitle text=\"Intro\" />\n                <Text>\n                    Dans cet épisode, on va commencer en douceur en découvrant\n                    le composant essentiel de notre drone, son cerveau : l'\n                    <Definition>Arduino</Definition>. On posera aussi les bases\n                    du code. Et comme je préfère apprendre avec la pratique, on\n                    ne va pas du tout rentrer dans la théorie de l'Arduino\n                    aujourd'hui. On va simplement voir ce que c'est (ça risque\n                    de faire chier ceux qui connaissent déjà) et on va voir ce\n                    qu'on va utiliser sur le drone et pourquoi.\n                </Text>\n                <Subtitle text=\"C'est quoi ?\" />\n                <Text>\n                    L'Arduino est une carte programmable qui se veut très utile\n                    dans des projets d'électronique en phase de prototypage.\n                    C'est une sorte de petit ordinateur qui va lancer un\n                    programme (que l'on va écrire) pour communiquer avec les\n                    composants électronique qu'on lui connecte.\n                </Text>\n                <Text>\n                    Les cartes Arduino sont déclinées en des dizaines de modèles\n                    différents, chacune ayant ses avantages et inconvénients. Le\n                    modèle le plus connu est sûrement l'Arduino Uno, et elle\n                    vous dira peut être quelque chose tant elle est répandue :\n                </Text>\n                <Image height=\"400\" alt=\"Photo Arduino Uno\" src={ArduinoUno} />\n                <Text>\n                    Elle peut faire peur à première vue, mais en réalité elle\n                    est extrêmement simple à prendre en main et intuitive.\n                </Text>\n                <Subtitle text=\"Et pour le drone ?\" />\n                <Text>\n                    Dans le cas de notre drone, nous devrons connecter un nombre\n                    assez conséquent de composants à l'Arduino. Malheureusement,\n                    une Arduino Uno ne nous convient pas...\n                </Text>\n                <Text>\n                    En effet, nous allons avoir besoin d'un nombre assez\n                    conséquent de pins. Les pins sont les petits trous carrés\n                    répartis autour de l'Arduino qui permettent de relier les\n                    composants. L'Arduino Uno n'en compte que 20 ! J'ai donc\n                    décidé de partir sur une Arduino Mega à la place de la Uno,\n                    qui offre 70 pins !\n                </Text>\n                <Image\n                    height=\"400\"\n                    alt=\"Photo Arduino Mega\"\n                    src={ArduinoMega}\n                />\n                <Text>\n                    Rassurez-vous, elle est presque identique à la Uno. En plus\n                    de l'avantage cité, la Mega dispose d'une mémoire flash 8x\n                    plus élevée (soit 256 KB).\n                </Text>\n                <Text>\n                    En revanche, elle est beaucoup plus grande et lourde ! Mais\n                    je considère actuellement que ce problème n'est pas très\n                    grave vu que le drone que l'on va construire sera assez\n                    grand (40x40cm).\n                </Text>\n                <Subtitle text=\"Les outils\" />\n                <Text>\n                    Bon. C'est une carte programmable, donc il va falloir\n                    préparer le terrain pour le code du drone.\n                </Text>\n                <Text>\n                    On va s'y prendre correctement. Il nous faut un IDE. Il faut\n                    se rappeler que le code du drone fera plusieurs milliers de\n                    lignes de code, et coder dans l'IDE Arduino est juste...\n                    horrible... Observez par vous-même :\n                </Text>\n                <Image\n                    height=\"500\"\n                    alt=\"Capture d'écran Arduino IDE\"\n                    src={ArduinoIDE}\n                />\n                <Text>\n                    Je me vois mal coder là dedans plusieurs milliers de lignes\n                    sans devenir fou. On va donc partir sur notre IDE favori :\n                    VSCode !\n                </Text>\n                <Image height=\"500\" alt=\"VSCode\" src={VSCode} />\n                <Text>\n                    On aura alors besoin d'installer l'extension{\" \"}\n                    <a href=\"https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.vscode-arduino\">\n                        vscode-arduino\n                    </a>\n                    . Elle nous permettra essentiellement d'avoir une\n                    autocomplétion fiable et de ne pas se voir souligner toutes\n                    les méthodes en rouge (vous voyez de quoi je parle). Elle\n                    permet aussi une multitude d'autres choses dont nous ne nous\n                    servirons pas.\n                </Text>\n                <Subtitle text=\"Le code de base\" />\n                <Text>\n                    Une Arduino se code en C++. La structure de base d'un\n                    programme est la suivante :\n                </Text>\n                <Code code={templateCode} language=\"cpp\" />\n                <Text>\n                    Elle est simplement composée de deux fonctions très basiques\n                    :\n                </Text>\n                <Text>\n                    <ul>\n                        <li>\n                            La fonction <Definition>setup()</Definition> : elle\n                            ne s'exécutera qu'une fois : au lancement de\n                            l'Arduino.\n                        </li>\n                        <li>\n                            La fonction <Definition>loop()</Definition> : comme\n                            son nom l'indique, elle va s'exécuter en boucle\n                            jusqu'à ce que vous éteignez l'Arduino.\n                        </li>\n                    </ul>\n                </Text>\n                <Subtitle text=\"Le Makefile\" />\n                <Text>\n                    Mais maintenant, comment est-ce qu'on envoie ce code sur\n                    l'Arduino Mega ?\n                </Text>\n                <Text>\n                    On va se servir d'un outil merveilleux appelé{\" \"}\n                    <a href=\"https://github.com/arduino/arduino-cli\">\n                        arduino-cli\n                    </a>\n                    . C'est un outil qui permet, entre autre, de compiler le\n                    code et de l'uploader sur l'Arduino depuis le terminal. Les\n                    commandes que l'on va utiliser sont les suivantes :\n                </Text>\n                <Text>\n                    <ul>\n                        <li>\n                            <Definition>\n                                arduino-cli -b BOARD compile\n                            </Definition>{\" \"}\n                            : ici, BOARD est à remplacer par la référence de la\n                            carte, c'est-à-dire\n                            \"arduino:avr:mega:cpu=atmega2560\" pour notre Arduino\n                            Mega. \"arduino-cli\" est le nom de l'outil, le \"-b\"\n                            et ce qui suit permet à arduino-cli de savoir de\n                            quelle carte il s'agit, et le \"compile\" lui permet\n                            de savoir qu'on veut compiler notre code.\n                        </li>\n                        <li>\n                            <Definition>\n                                arduino-cli -b BOARD -p PORT upload\n                            </Definition>{\" \"}\n                            : cette commande permet d'uploader le code compilé\n                            sur l'Arduino. Ici, \"PORT\" est à remplacer par le\n                            port USB de l'ordinateur sur lequel l'Arduino est\n                            branché. Il peut être facilement déterminé depuis\n                            l'extension Arduino sur VSCode.\n                        </li>\n                    </ul>\n                </Text>\n                <Text>\n                    Mais... Ces commandes sont chiantes à rentrer à chaque fois\n                    omg. On va faire un Makefile. Pour simplifier, ça nous\n                    permettra notamment de faire des raccourcis vers ces\n                    commandes. Taper <Definition>make</Definition> dans le\n                    terminal compilera le code, et taper{\" \"}\n                    <Definition>make upload</Definition> l'enverra sur\n                    l'Arduino.\n                </Text>\n                <Code code={makefileCode} language=\"makefile\" />\n                <Text>\n                    On a l'air bon maintenant, non ? On peut essayer de compiler\n                    et d'upload, tout se passe merveilleusement bien !\n                </Text>\n                <Subtitle text=\"Conclusion\" />\n                <Text>\n                    On a bien avancé aujourd'hui. On a donc vu l'Arduino qu'on\n                    utilisera (on commence à le savoir) et les fondations du\n                    code.\n                </Text>\n                <Text>\n                    Dans l'épisode suivant, nous mettrons en place les premiers\n                    composants : LEDs, LED RGB, bouton on/off...\n                </Text>\n            </Article>\n        );\n    }\n}\n","import Episode1 from \"./pages/Episode1\";\nimport Error404 from \"./pages/Error404\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./Reset.sass\";\nimport \"./App.sass\";\nimport \"./Fonts.sass\";\nimport Home from \"./pages/Home\";\nimport Episode2 from \"./pages/Episode2\";\n\nfunction App() {\n    return (\n        <HashRouter basename=\"/\">\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/articles/create-drone-1\" component={Episode1} />\n                <Route path=\"/articles/create-drone-2\" component={Episode2} />\n                <Route path=\"/\" component={Error404} />\n            </Switch>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}